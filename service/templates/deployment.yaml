apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.prefixedName" . }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}

  selector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}

  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: "50%"
      maxUnavailable: 0

  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      labels:
        cuv-global.app/is-standard-service: "1"
        admission.datadoghq.com/enabled: "true"
        {{- include "service.selectorLabels" . | nindent 8 }}

    spec:
      serviceAccountName: {{ include "service.prefixedName" . }}
      terminationGracePeriodSeconds: 65
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args:
            {{- toYaml .Values.image.args | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DD_VERSION
              value: {{ .Values.image.tag }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: "status.hostIP"
            {{- range $key, $value := .Values.env}}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end}}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /system/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      dnsConfig:
        options:
          - name: "ndots"
            value: "1"

      dnsPolicy: "ClusterFirst"

      affinity:
        podAntiAffinity:

          preferredDuringSchedulingIgnoredDuringExecution:

            # spread this service's pods across availability zones
            - weight: 20
              podAffinityTerm:
                topologyKey: "kubernetes.io/zone"
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: "In"
                      values: [ {{ include "service.prefixedName" . }} ]

            # spread this service's pods across hosts
            - weight: 10
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: "In"
                      values: [ {{ include "service.prefixedName" . }} ]

            # spread this service's pods from different namespaces onto other hosts
            # e.g. don't put avocado and basil's quote services on the same host
            - weight: 5
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                namespaces: [ "env-avocado", "env-basil", "env-coconut", "env-pretzel", "env-ephemeral", "env-test" ]
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: "In"
                      values: [ {{ include "service.prefixedName" . }} ]
